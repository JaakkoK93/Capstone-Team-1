{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Final notebook to prepare data**\n"],"metadata":{"id":"WugJmEvgp9Cf"}},{"cell_type":"markdown","source":["## 1) Import data\n","Import necessary libraries & check if dataframe is correctly displayed (only focus on 1292 and 1293 for now) bold text"],"metadata":{"id":"FybycD-4WYXO"}},{"cell_type":"code","source":["import pandas as pd\n","import matplotlib.pyplot as plt"],"metadata":{"id":"pRAkPGaWYJDl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["kernel_memory_data = pd.read_csv('/content/Kmalloc_Data_Modified_With_Decrease.csv', sep=';')\n","kernel_memory_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"BaVD-NKPrssf","executionInfo":{"status":"ok","timestamp":1686235082945,"user_tz":-180,"elapsed":419,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"e1336865-643c-44f3-98e5-593d8a7fe18a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Column1  Column1192  Column1193  Column1202  Column1203  Column1212  \\\n","0     1679047325      8192.0       564.0      4096.0      1194.0      2048.0   \n","1     1679047925      8192.0       564.0      4096.0      1194.0      2048.0   \n","2     1679048525      8192.0       564.0      4096.0      1194.0      2048.0   \n","3     1679049125      8192.0       564.0      4096.0      1194.0      2048.0   \n","4     1679049725      8192.0       564.0      4096.0      1194.0      2048.0   \n","...          ...         ...         ...         ...         ...         ...   \n","4644  1681833725         NaN         NaN         NaN         NaN         NaN   \n","4645  1681834325         NaN         NaN         NaN         NaN         NaN   \n","4646  1681834925         NaN         NaN         NaN         NaN         NaN   \n","4647  1681835525         NaN         NaN         NaN         NaN         NaN   \n","4648  1681836125         NaN         NaN         NaN         NaN         NaN   \n","\n","      Column1213  Column1222  Column1223  Column1232  ...  Column1272  \\\n","0          740.0      1024.0      2336.0       512.0  ...        96.0   \n","1          740.0      1024.0      2336.0       512.0  ...        96.0   \n","2          740.0      1024.0      2336.0       512.0  ...        96.0   \n","3          740.0      1024.0      2336.0       512.0  ...        96.0   \n","4          740.0      1024.0      2336.0       512.0  ...        96.0   \n","...          ...         ...         ...         ...  ...         ...   \n","4644         NaN         NaN         NaN         NaN  ...         NaN   \n","4645         NaN         NaN         NaN         NaN  ...         NaN   \n","4646         NaN         NaN         NaN         NaN  ...         NaN   \n","4647         NaN         NaN         NaN         NaN  ...         NaN   \n","4648         NaN         NaN         NaN         NaN  ...         NaN   \n","\n","      Column1273  Column1282  Column1283  Column1292  Column1293  Column1302  \\\n","0         5124.0        64.0     28059.0          32       32384        16.0   \n","1         5124.0        64.0     28225.0          32       32384        16.0   \n","2         5124.0        64.0     27598.0          32       32384        16.0   \n","3         5124.0        64.0     28276.0          32       32384        16.0   \n","4         5124.0        64.0     27301.0          32       32384        16.0   \n","...          ...         ...         ...         ...         ...         ...   \n","4644         NaN         NaN         NaN          32       43677         NaN   \n","4645         NaN         NaN         NaN          32       43677         NaN   \n","4646         NaN         NaN         NaN          32       43677         NaN   \n","4647         NaN         NaN         NaN          32       43677         NaN   \n","4648         NaN         NaN         NaN          32       43677         NaN   \n","\n","      Column1303  Column132  Column133  \n","0         6400.0        8.0    13824.0  \n","1         6400.0        8.0    13824.0  \n","2         6400.0        8.0    13824.0  \n","3         6400.0        8.0    13824.0  \n","4         6400.0        8.0    13824.0  \n","...          ...        ...        ...  \n","4644         NaN        NaN        NaN  \n","4645         NaN        NaN        NaN  \n","4646         NaN        NaN        NaN  \n","4647         NaN        NaN        NaN  \n","4648         NaN        NaN        NaN  \n","\n","[4649 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-c48abf10-60ef-4173-80bb-93565663acfc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column1</th>\n","      <th>Column1192</th>\n","      <th>Column1193</th>\n","      <th>Column1202</th>\n","      <th>Column1203</th>\n","      <th>Column1212</th>\n","      <th>Column1213</th>\n","      <th>Column1222</th>\n","      <th>Column1223</th>\n","      <th>Column1232</th>\n","      <th>...</th>\n","      <th>Column1272</th>\n","      <th>Column1273</th>\n","      <th>Column1282</th>\n","      <th>Column1283</th>\n","      <th>Column1292</th>\n","      <th>Column1293</th>\n","      <th>Column1302</th>\n","      <th>Column1303</th>\n","      <th>Column132</th>\n","      <th>Column133</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1679047325</td>\n","      <td>8192.0</td>\n","      <td>564.0</td>\n","      <td>4096.0</td>\n","      <td>1194.0</td>\n","      <td>2048.0</td>\n","      <td>740.0</td>\n","      <td>1024.0</td>\n","      <td>2336.0</td>\n","      <td>512.0</td>\n","      <td>...</td>\n","      <td>96.0</td>\n","      <td>5124.0</td>\n","      <td>64.0</td>\n","      <td>28059.0</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>16.0</td>\n","      <td>6400.0</td>\n","      <td>8.0</td>\n","      <td>13824.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1679047925</td>\n","      <td>8192.0</td>\n","      <td>564.0</td>\n","      <td>4096.0</td>\n","      <td>1194.0</td>\n","      <td>2048.0</td>\n","      <td>740.0</td>\n","      <td>1024.0</td>\n","      <td>2336.0</td>\n","      <td>512.0</td>\n","      <td>...</td>\n","      <td>96.0</td>\n","      <td>5124.0</td>\n","      <td>64.0</td>\n","      <td>28225.0</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>16.0</td>\n","      <td>6400.0</td>\n","      <td>8.0</td>\n","      <td>13824.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1679048525</td>\n","      <td>8192.0</td>\n","      <td>564.0</td>\n","      <td>4096.0</td>\n","      <td>1194.0</td>\n","      <td>2048.0</td>\n","      <td>740.0</td>\n","      <td>1024.0</td>\n","      <td>2336.0</td>\n","      <td>512.0</td>\n","      <td>...</td>\n","      <td>96.0</td>\n","      <td>5124.0</td>\n","      <td>64.0</td>\n","      <td>27598.0</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>16.0</td>\n","      <td>6400.0</td>\n","      <td>8.0</td>\n","      <td>13824.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1679049125</td>\n","      <td>8192.0</td>\n","      <td>564.0</td>\n","      <td>4096.0</td>\n","      <td>1194.0</td>\n","      <td>2048.0</td>\n","      <td>740.0</td>\n","      <td>1024.0</td>\n","      <td>2336.0</td>\n","      <td>512.0</td>\n","      <td>...</td>\n","      <td>96.0</td>\n","      <td>5124.0</td>\n","      <td>64.0</td>\n","      <td>28276.0</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>16.0</td>\n","      <td>6400.0</td>\n","      <td>8.0</td>\n","      <td>13824.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1679049725</td>\n","      <td>8192.0</td>\n","      <td>564.0</td>\n","      <td>4096.0</td>\n","      <td>1194.0</td>\n","      <td>2048.0</td>\n","      <td>740.0</td>\n","      <td>1024.0</td>\n","      <td>2336.0</td>\n","      <td>512.0</td>\n","      <td>...</td>\n","      <td>96.0</td>\n","      <td>5124.0</td>\n","      <td>64.0</td>\n","      <td>27301.0</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>16.0</td>\n","      <td>6400.0</td>\n","      <td>8.0</td>\n","      <td>13824.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4644</th>\n","      <td>1681833725</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1681834325</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4646</th>\n","      <td>1681834925</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4647</th>\n","      <td>1681835525</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4648</th>\n","      <td>1681836125</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4649 rows × 27 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c48abf10-60ef-4173-80bb-93565663acfc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c48abf10-60ef-4173-80bb-93565663acfc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c48abf10-60ef-4173-80bb-93565663acfc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","source":["## 2) Calculate total memory for each memory block\n","Calculate the total memory for the memory blocks. The actual size of memory is multiplied with the allocated memory."],"metadata":{"id":"OGpPEFwdWd3w"}},{"cell_type":"code","source":["# Iterate through all columns and mulitply column value 2 with column value 1\n","total_columns = kernel_memory_data.shape[1]\n","column1_selector = 1\n","column2_selector = 2\n","dynamic_column_number= 0\n","df_total_memory = pd.DataFrame()\n","rating_list = []\n","total_memory = 0\n","column_name = 8192\n","\n","for i in range(total_columns//2):\n","  column1 = kernel_memory_data.iloc[:, column1_selector]\n","  column2 = kernel_memory_data.iloc[:, column2_selector]\n","  column_timestamp = kernel_memory_data.iloc[:, 0]\n","  index_number=0\n","  row_value=0\n","  while (index_number < (len(kernel_memory_data.index))):\n","    total_memory = column2.loc[row_value] * column1.loc[row_value]\n","    rating_list.append(total_memory)\n","    row_value += 1\n","    index_number += 1\n","\n","  df_total_memory[\"Column_Timestamp\"] = column_timestamp\n","  df_total_memory[\"Column_\" + str(column1_selector+1) + \"_\" + str(column2_selector+1)] = rating_list\n","  column1_selector +=2\n","  column2_selector +=2\n","  dynamic_column_number +=1\n","  rating_list.clear()\n","\n","df_total_memory"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"pRIrLMUeQedE","executionInfo":{"status":"ok","timestamp":1686235088006,"user_tz":-180,"elapsed":1525,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"e77575d7-2035-429c-a017-117b16729161"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_Timestamp  Column_2_3  Column_4_5  Column_6_7  Column_8_9  \\\n","0           1679047325   4620288.0   4890624.0   1515520.0   2392064.0   \n","1           1679047925   4620288.0   4890624.0   1515520.0   2392064.0   \n","2           1679048525   4620288.0   4890624.0   1515520.0   2392064.0   \n","3           1679049125   4620288.0   4890624.0   1515520.0   2392064.0   \n","4           1679049725   4620288.0   4890624.0   1515520.0   2392064.0   \n","...                ...         ...         ...         ...         ...   \n","4644        1681833725         NaN         NaN         NaN         NaN   \n","4645        1681834325         NaN         NaN         NaN         NaN   \n","4646        1681834925         NaN         NaN         NaN         NaN   \n","4647        1681835525         NaN         NaN         NaN         NaN   \n","4648        1681836125         NaN         NaN         NaN         NaN   \n","\n","      Column_10_11  Column_12_13  Column_14_15  Column_16_17  Column_18_19  \\\n","0         720896.0      598016.0     2612736.0      274432.0      491904.0   \n","1         720896.0      598016.0     2644992.0      274432.0      491904.0   \n","2         720896.0      598016.0     2644992.0      274432.0      491904.0   \n","3         720896.0      598016.0     2669184.0      274432.0      491904.0   \n","4         720896.0      598016.0     2669184.0      274432.0      491904.0   \n","...            ...           ...           ...           ...           ...   \n","4644           NaN           NaN           NaN           NaN           NaN   \n","4645           NaN           NaN           NaN           NaN           NaN   \n","4646           NaN           NaN           NaN           NaN           NaN   \n","4647           NaN           NaN           NaN           NaN           NaN   \n","4648           NaN           NaN           NaN           NaN           NaN   \n","\n","      Column_20_21  Column_22_23  Column_24_25  Column_26_27  \n","0        1795776.0       1036288      102400.0      110592.0  \n","1        1806400.0       1036288      102400.0      110592.0  \n","2        1766272.0       1036288      102400.0      110592.0  \n","3        1809664.0       1036288      102400.0      110592.0  \n","4        1747264.0       1036288      102400.0      110592.0  \n","...            ...           ...           ...           ...  \n","4644           NaN       1397664           NaN           NaN  \n","4645           NaN       1397664           NaN           NaN  \n","4646           NaN       1397664           NaN           NaN  \n","4647           NaN       1397664           NaN           NaN  \n","4648           NaN       1397664           NaN           NaN  \n","\n","[4649 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-e62b52b9-9e74-48de-840d-3a4f13490944\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_Timestamp</th>\n","      <th>Column_2_3</th>\n","      <th>Column_4_5</th>\n","      <th>Column_6_7</th>\n","      <th>Column_8_9</th>\n","      <th>Column_10_11</th>\n","      <th>Column_12_13</th>\n","      <th>Column_14_15</th>\n","      <th>Column_16_17</th>\n","      <th>Column_18_19</th>\n","      <th>Column_20_21</th>\n","      <th>Column_22_23</th>\n","      <th>Column_24_25</th>\n","      <th>Column_26_27</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1679047325</td>\n","      <td>4620288.0</td>\n","      <td>4890624.0</td>\n","      <td>1515520.0</td>\n","      <td>2392064.0</td>\n","      <td>720896.0</td>\n","      <td>598016.0</td>\n","      <td>2612736.0</td>\n","      <td>274432.0</td>\n","      <td>491904.0</td>\n","      <td>1795776.0</td>\n","      <td>1036288</td>\n","      <td>102400.0</td>\n","      <td>110592.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1679047925</td>\n","      <td>4620288.0</td>\n","      <td>4890624.0</td>\n","      <td>1515520.0</td>\n","      <td>2392064.0</td>\n","      <td>720896.0</td>\n","      <td>598016.0</td>\n","      <td>2644992.0</td>\n","      <td>274432.0</td>\n","      <td>491904.0</td>\n","      <td>1806400.0</td>\n","      <td>1036288</td>\n","      <td>102400.0</td>\n","      <td>110592.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1679048525</td>\n","      <td>4620288.0</td>\n","      <td>4890624.0</td>\n","      <td>1515520.0</td>\n","      <td>2392064.0</td>\n","      <td>720896.0</td>\n","      <td>598016.0</td>\n","      <td>2644992.0</td>\n","      <td>274432.0</td>\n","      <td>491904.0</td>\n","      <td>1766272.0</td>\n","      <td>1036288</td>\n","      <td>102400.0</td>\n","      <td>110592.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1679049125</td>\n","      <td>4620288.0</td>\n","      <td>4890624.0</td>\n","      <td>1515520.0</td>\n","      <td>2392064.0</td>\n","      <td>720896.0</td>\n","      <td>598016.0</td>\n","      <td>2669184.0</td>\n","      <td>274432.0</td>\n","      <td>491904.0</td>\n","      <td>1809664.0</td>\n","      <td>1036288</td>\n","      <td>102400.0</td>\n","      <td>110592.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1679049725</td>\n","      <td>4620288.0</td>\n","      <td>4890624.0</td>\n","      <td>1515520.0</td>\n","      <td>2392064.0</td>\n","      <td>720896.0</td>\n","      <td>598016.0</td>\n","      <td>2669184.0</td>\n","      <td>274432.0</td>\n","      <td>491904.0</td>\n","      <td>1747264.0</td>\n","      <td>1036288</td>\n","      <td>102400.0</td>\n","      <td>110592.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4644</th>\n","      <td>1681833725</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1397664</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1681834325</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1397664</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4646</th>\n","      <td>1681834925</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1397664</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4647</th>\n","      <td>1681835525</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1397664</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4648</th>\n","      <td>1681836125</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1397664</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4649 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e62b52b9-9e74-48de-840d-3a4f13490944')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e62b52b9-9e74-48de-840d-3a4f13490944 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e62b52b9-9e74-48de-840d-3a4f13490944');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":88}]},{"cell_type":"markdown","source":["## 3) Label data for 32 memory block (Column 1292 & 1293)\n","Steps in order to label data:\n","\n","\n","1.   Visualize data\n","2.   Sort total memory over time (every 5th entry)\n","3.   Attach labels based on total memory over time (previous step)\n","4.   Create a final dataframe with the sorted time, sorted total memory, original column 1292, original column 1293 and label\n","5.   Export to CSV\n","\n","\n","\n","```\n","Final dataframe = final_df\n","\n","Final dataframe combines:\n","Sorted time = df_timestamp_sorted\n","Sorted total memory = df_total_mem\n","Sorted Column 1292 & 1293 = df_col_1292_1293\n","Labels = df_labels\n","```\n","\n","\n","\n"],"metadata":{"id":"FeXQXB2oz1hs"}},{"cell_type":"markdown","source":["#### 1) Visualize and analyse 32 memory block over time"],"metadata":{"id":"UMkxl7BvW8Ma"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","x = df_total_memory[\"Column_Timestamp\"]\n","y = df_total_memory[\"Column_22_23\"]\n","\n","plt.figure(figsize=(10,5))\n","plt.plot(x, y)\n","\n","plt.title(\"Memory allocation over time kernel size 32\")\n","plt.xlabel(\"Time\")\n","plt.ylabel(\"Total memory\")"],"metadata":{"id":"bwGCmg2G4me1","colab":{"base_uri":"https://localhost:8080/","height":505},"executionInfo":{"status":"ok","timestamp":1686235094706,"user_tz":-180,"elapsed":937,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"732bf29c-bdfd-4040-bc48-02c7986763bb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Total memory')"]},"metadata":{},"execution_count":89},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df_extracted_sample_data = df_total_memory[['Column_Timestamp', 'Column_22_23']]\n","df_extracted_sample_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"M0nOZtUVXLqx","executionInfo":{"status":"ok","timestamp":1686235106838,"user_tz":-180,"elapsed":285,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"fd1f5c29-a9f9-4019-d709-5b139b13d783"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_Timestamp  Column_22_23\n","0           1679047325       1036288\n","1           1679047925       1036288\n","2           1679048525       1036288\n","3           1679049125       1036288\n","4           1679049725       1036288\n","...                ...           ...\n","4644        1681833725       1397664\n","4645        1681834325       1397664\n","4646        1681834925       1397664\n","4647        1681835525       1397664\n","4648        1681836125       1397664\n","\n","[4649 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-35884780-67ef-4636-89b1-9afd89e86268\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_Timestamp</th>\n","      <th>Column_22_23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1679047325</td>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1679047925</td>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1679048525</td>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1679049125</td>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1679049725</td>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4644</th>\n","      <td>1681833725</td>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1681834325</td>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4646</th>\n","      <td>1681834925</td>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4647</th>\n","      <td>1681835525</td>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4648</th>\n","      <td>1681836125</td>\n","      <td>1397664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4649 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35884780-67ef-4636-89b1-9afd89e86268')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-35884780-67ef-4636-89b1-9afd89e86268 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-35884780-67ef-4636-89b1-9afd89e86268');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":90}]},{"cell_type":"markdown","source":["#### 2) Sort total memory values over time (every 5th entry)"],"metadata":{"id":"XA8Adl2wYF54"}},{"cell_type":"code","source":["df_extracted_sample_data_total_mem = df_total_memory[['Column_22_23']]\n","df_extracted_sample_data_total_mem"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"AoiGYSmIX1-b","executionInfo":{"status":"ok","timestamp":1686235108506,"user_tz":-180,"elapsed":294,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"82d6cb80-30a1-4e4d-c218-1f837ca60583"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_22_23\n","0          1036288\n","1          1036288\n","2          1036288\n","3          1036288\n","4          1036288\n","...            ...\n","4644       1397664\n","4645       1397664\n","4646       1397664\n","4647       1397664\n","4648       1397664\n","\n","[4649 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-2cd5231d-6374-4e7f-ac64-f60936fb2062\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_22_23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4644</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4646</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4647</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4648</th>\n","      <td>1397664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4649 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2cd5231d-6374-4e7f-ac64-f60936fb2062')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2cd5231d-6374-4e7f-ac64-f60936fb2062 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2cd5231d-6374-4e7f-ac64-f60936fb2062');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["df_total_mem = df_extracted_sample_data_total_mem.iloc[::5, :]\n","df_total_mem"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"b1JcMqH4XQjl","executionInfo":{"status":"ok","timestamp":1686235108755,"user_tz":-180,"elapsed":8,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"a116bb21-541b-40ec-c8ca-d0d065594317"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_22_23\n","0          1036288\n","5          1036288\n","10         1060864\n","15         1101824\n","20         1110016\n","...            ...\n","4625       1397664\n","4630       1397664\n","4635       1397664\n","4640       1397664\n","4645       1397664\n","\n","[930 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-7bcef6ac-228c-42d8-b7a7-5a4c58199c7b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_22_23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1060864</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1101824</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1110016</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4625</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4630</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4635</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4640</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1397664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>930 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bcef6ac-228c-42d8-b7a7-5a4c58199c7b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7bcef6ac-228c-42d8-b7a7-5a4c58199c7b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7bcef6ac-228c-42d8-b7a7-5a4c58199c7b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":92}]},{"cell_type":"markdown","source":["#### 3) Create labels and attach to sorted total memory"],"metadata":{"id":"nZAlFHKOYSqU"}},{"cell_type":"code","source":["label_list = []\n","df_labels = pd.DataFrame()\n","\n","# Define the gradual increase percentage and the threshold value\n","gradual_increase = 0.5  # 0.5% gradual increase\n","threshold_value = 1922912\n","\n","for i in range(df_total_mem.shape[0]):\n","    first_row_selector = 0\n","    second_row_selector = 1\n","    index_number= 0\n","    while (index_number < (len(df_total_mem.index) -1)):\n","        if df_total_mem['Column_22_23'].iloc[second_row_selector] >= threshold_value:\n","            label_list.append(0)  # Assign label 0 (bad)\n","        else:\n","          percentage_calculation = (df_total_mem['Column_22_23'].iloc[first_row_selector] * (1 + gradual_increase/100))\n","          danger_zone = (threshold_value - ((threshold_value * 20) / 100))\n","          if df_total_mem['Column_22_23'].iloc[second_row_selector] > danger_zone and df_total_mem['Column_22_23'].iloc[second_row_selector] >= percentage_calculation:\n","            label_list.append(0)  # Assign label 0 (bad)\n","          else:\n","              label_list.append(1)  # Assign label 1 (good)\n","\n","        index_number += 1\n","        first_row_selector += 1\n","        second_row_selector += 1\n","\n","    df_labels[\"Column_labels\"] = label_list\n","    label_list.clear()\n","\n","df_labels\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"33P2lSrYYDjW","executionInfo":{"status":"ok","timestamp":1686235141813,"user_tz":-180,"elapsed":31622,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"32a8d4b4-d23f-4665-eba2-7ea5d2be12fb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Column_labels\n","0                1\n","1                1\n","2                1\n","3                1\n","4                1\n","..             ...\n","924              1\n","925              1\n","926              1\n","927              1\n","928              1\n","\n","[929 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-31f366ce-ac6d-43b8-a539-2fa76b43f8df\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>926</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>927</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>928</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>929 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-31f366ce-ac6d-43b8-a539-2fa76b43f8df')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-31f366ce-ac6d-43b8-a539-2fa76b43f8df button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-31f366ce-ac6d-43b8-a539-2fa76b43f8df');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["label_counts = df_labels.value_counts()\n","print(label_counts)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bUQWRBBVYaTO","executionInfo":{"status":"ok","timestamp":1686228857447,"user_tz":-180,"elapsed":287,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"642cd9e6-0af3-4828-dc4d-5593cd09a008"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Column_labels\n","1                663\n","0                266\n","dtype: int64\n"]}]},{"cell_type":"markdown","source":["#### 4) Combine all data and create final dataframe"],"metadata":{"id":"feLyuhQsZSMh"}},{"cell_type":"markdown","source":["Sorted timestamp column"],"metadata":{"id":"iERZrV4LgyKr"}},{"cell_type":"code","source":["df_extracted_sample_data_timestamp = df_total_memory[['Column_Timestamp']]\n","df_extracted_sample_data_timestamp\n","\n","df_timestamp_sorted = df_extracted_sample_data_timestamp.iloc[::5, :]\n","df_timestamp_sorted = df_timestamp_sorted.drop(df_timestamp_sorted.index[0])\n","df_timestamp_sorted"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-bKCgP4_guI7","executionInfo":{"status":"ok","timestamp":1686228860976,"user_tz":-180,"elapsed":265,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"54f8e933-522e-4c35-d83c-d7a86985c561"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_Timestamp\n","5           1679050325\n","10          1679053325\n","15          1679056325\n","20          1679059325\n","25          1679062325\n","...                ...\n","4625        1681822325\n","4630        1681825325\n","4635        1681828325\n","4640        1681831325\n","4645        1681834325\n","\n","[929 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-073b2bf8-492d-43cd-9e86-a8f4d539dd42\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_Timestamp</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>1679050325</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1679053325</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1679056325</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1679059325</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1679062325</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4625</th>\n","      <td>1681822325</td>\n","    </tr>\n","    <tr>\n","      <th>4630</th>\n","      <td>1681825325</td>\n","    </tr>\n","    <tr>\n","      <th>4635</th>\n","      <td>1681828325</td>\n","    </tr>\n","    <tr>\n","      <th>4640</th>\n","      <td>1681831325</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1681834325</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>929 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-073b2bf8-492d-43cd-9e86-a8f4d539dd42')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-073b2bf8-492d-43cd-9e86-a8f4d539dd42 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-073b2bf8-492d-43cd-9e86-a8f4d539dd42');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","source":["Sorted total memory column"],"metadata":{"id":"PGJBcbV3g8XE"}},{"cell_type":"code","source":["df_total_mem = df_total_mem.drop(df_total_mem.index[0])\n","df_total_mem"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Mg3rmC5zZbbu","executionInfo":{"status":"ok","timestamp":1686228907870,"user_tz":-180,"elapsed":265,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"e7deb092-defe-4e93-a42f-7180c8dfa98e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Column_22_23\n","5          1036288\n","10         1060864\n","15         1101824\n","20         1110016\n","25         1126400\n","...            ...\n","4625       1397664\n","4630       1397664\n","4635       1397664\n","4640       1397664\n","4645       1397664\n","\n","[929 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-7691b524-0aeb-4219-a3a5-051b559569fd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_22_23</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>1036288</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>1060864</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1101824</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>1110016</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1126400</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4625</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4630</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4635</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4640</th>\n","      <td>1397664</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>1397664</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>929 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7691b524-0aeb-4219-a3a5-051b559569fd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7691b524-0aeb-4219-a3a5-051b559569fd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7691b524-0aeb-4219-a3a5-051b559569fd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":64}]},{"cell_type":"markdown","source":["Sorted original 1292 and 1293 columns"],"metadata":{"id":"d2P0rMjahC4I"}},{"cell_type":"code","source":["Col1292 = kernel_memory_data[['Column1292']]\n","Col1293  = kernel_memory_data[['Column1293']]\n","\n","df_col_1292_1293 = pd.DataFrame()\n","\n","for i in range(Col1292.shape[0]):\n","  col1292_sorted_values_by_time = Col1292.iloc[::5, :]\n","  col1293_sorted_values_by_time = Col1293.iloc[::5, :]\n","\n","  df_col_1292_1293[\"Col1292\"] =col1292_sorted_values_by_time\n","  df_col_1292_1293[\"Col1293\"] = col1293_sorted_values_by_time\n","\n","df_col_1292_1293 = df_col_1292_1293.drop(df_col_1292_1293.index[0])\n","df_col_1292_1293"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"-pEK1A6vackf","executionInfo":{"status":"ok","timestamp":1686228911960,"user_tz":-180,"elapsed":2278,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"113e933a-601f-47a6-a0dc-6b3fef735843"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Col1292  Col1293\n","5          32    32384\n","10         32    33152\n","15         32    34432\n","20         32    34688\n","25         32    35200\n","...       ...      ...\n","4625       32    43677\n","4630       32    43677\n","4635       32    43677\n","4640       32    43677\n","4645       32    43677\n","\n","[929 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-8c489738-3f86-497e-8c71-ad277f58a6c7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Col1292</th>\n","      <th>Col1293</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>32</td>\n","      <td>32384</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>32</td>\n","      <td>33152</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>32</td>\n","      <td>34432</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>32</td>\n","      <td>34688</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>32</td>\n","      <td>35200</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4625</th>\n","      <td>32</td>\n","      <td>43677</td>\n","    </tr>\n","    <tr>\n","      <th>4630</th>\n","      <td>32</td>\n","      <td>43677</td>\n","    </tr>\n","    <tr>\n","      <th>4635</th>\n","      <td>32</td>\n","      <td>43677</td>\n","    </tr>\n","    <tr>\n","      <th>4640</th>\n","      <td>32</td>\n","      <td>43677</td>\n","    </tr>\n","    <tr>\n","      <th>4645</th>\n","      <td>32</td>\n","      <td>43677</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>929 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c489738-3f86-497e-8c71-ad277f58a6c7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-8c489738-3f86-497e-8c71-ad277f58a6c7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-8c489738-3f86-497e-8c71-ad277f58a6c7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["Check whether  df_timestamp_sorted + df_total_mem + df_col_1292_1293 + df_labels have equal length (same amount of entries)\n","\n","\n","\n","\n","\n","*   If length **is equal** then combine sorted time, sorted total memory, sorted original 1292 and 1293, labels into final dataframe\n","*   If length **is not equal** then print message that it is not equal (there will be no final dataframe in this case)\n","\n","\n","\n","In practice what will be combined= df_timestamp_sorted + df_total_mem + df_col_1292_1293 + df_labels\n"],"metadata":{"id":"hcfvqrSLoWYl"}},{"cell_type":"code","source":["if len(df_timestamp_sorted) == len(df_total_mem) == len(df_col_1292_1293) == len(df_labels):\n","  print(\"Length is equal\")\n","  final_df = pd.concat([df_timestamp_sorted.reset_index(drop=True), df_total_mem.reset_index(drop=True),  df_col_1292_1293.reset_index(drop=True) ,df_labels.reset_index(drop=True)], axis=1, join='inner')\n","else:\n","   print(\"Length not equal\")\n","\n","final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":442},"id":"w3SO6pGxaEN3","executionInfo":{"status":"ok","timestamp":1686228917651,"user_tz":-180,"elapsed":453,"user":{"displayName":"Moments With Irene","userId":"02558853990586354537"}},"outputId":"ed6db5f3-a6b6-4905-893d-1d34c76ac062"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Length is equal\n"]},{"output_type":"execute_result","data":{"text/plain":["     Column_Timestamp  Column_22_23  Col1292  Col1293  Column_labels\n","0          1679050325       1036288       32    32384              1\n","1          1679053325       1060864       32    33152              1\n","2          1679056325       1101824       32    34432              1\n","3          1679059325       1110016       32    34688              1\n","4          1679062325       1126400       32    35200              1\n","..                ...           ...      ...      ...            ...\n","924        1681822325       1397664       32    43677              1\n","925        1681825325       1397664       32    43677              1\n","926        1681828325       1397664       32    43677              1\n","927        1681831325       1397664       32    43677              1\n","928        1681834325       1397664       32    43677              1\n","\n","[929 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-98aee30f-7433-4dfb-ab37-78208a69deda\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Column_Timestamp</th>\n","      <th>Column_22_23</th>\n","      <th>Col1292</th>\n","      <th>Col1293</th>\n","      <th>Column_labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1679050325</td>\n","      <td>1036288</td>\n","      <td>32</td>\n","      <td>32384</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1679053325</td>\n","      <td>1060864</td>\n","      <td>32</td>\n","      <td>33152</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1679056325</td>\n","      <td>1101824</td>\n","      <td>32</td>\n","      <td>34432</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1679059325</td>\n","      <td>1110016</td>\n","      <td>32</td>\n","      <td>34688</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1679062325</td>\n","      <td>1126400</td>\n","      <td>32</td>\n","      <td>35200</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>924</th>\n","      <td>1681822325</td>\n","      <td>1397664</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>925</th>\n","      <td>1681825325</td>\n","      <td>1397664</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>926</th>\n","      <td>1681828325</td>\n","      <td>1397664</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>927</th>\n","      <td>1681831325</td>\n","      <td>1397664</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>928</th>\n","      <td>1681834325</td>\n","      <td>1397664</td>\n","      <td>32</td>\n","      <td>43677</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>929 rows × 5 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98aee30f-7433-4dfb-ab37-78208a69deda')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-98aee30f-7433-4dfb-ab37-78208a69deda button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-98aee30f-7433-4dfb-ab37-78208a69deda');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["\n","final_df.to_csv('clean_dataset.csv', index=False)\n"],"metadata":{"id":"fVHh-lHit2zE"},"execution_count":null,"outputs":[]}]}